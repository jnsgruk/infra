version: "3"

networks:
  proxy:
  socket_proxy:
  nextcloud:

services:
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    privileged: yes
    environment:
      - CONTAINERS=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - socket_proxy
    restart: always

  traefik:
    image: traefik:v2.3.5
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    depends_on:
      - socket-proxy
    entrypoint:
      - /entrypoint-shim.sh
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"
      - "--providers.docker.network=proxy"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myhttpchallenge.acme.email=$EMAIL"
      - "--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=$ADMIN_USER"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`monitor.jnsgr.uk`)"
      - "traefik.http.routers.traefik.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - $PWD/traefik/entrypoint-shim.sh:/entrypoint-shim.sh
      - $PWD/traefik/config.yml:/etc/traefik/config.yml
      - $PWD/data/traefik/letsencrypt:/letsencrypt
    networks:
      - proxy
      - socket_proxy
    restart: always

  jnsgruk:
    image: docker.pkg.github.com/jnsgruk/jnsgr.uk/jnsgr.uk:0.4
    container_name: jnsgruk
    environment:
      WEBROOT: ./public
      REDIRECT_MAP_URL: https://gist.githubusercontent.com/jnsgruk/b590f114af1b041eeeab3e7f6e9851b7/raw
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jnsgruk.rule=Host(`jnsgr.uk`) || Host(`www.jnsgr.uk`)"
      - "traefik.http.routers.jnsgruk.entrypoints=websecure"
      - "traefik.http.routers.jnsgruk.tls=true"
      - "traefik.http.routers.jnsgruk.tls.certresolver=myhttpchallenge"
    restart: unless-stopped

  bin:
    build:
      context: .
      dockerfile: dockerfiles/bin.dockerfile
    image: jnsgruk/bin:latest
    container_name: bin
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bin.rule=Host(`bin.jnsgr.uk`)"
      - "traefik.http.routers.bin.entrypoints=websecure"
      - "traefik.http.routers.bin.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.bin.tls=true"
    restart: always

  nextcloud:
    image: nextcloud:apache
    container_name: nextcloud
    networks:
      - proxy
      - nextcloud
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    volumes:
      - $PWD/data/nextcloud/app/config:/var/www/html/config
      - $PWD/data/nextcloud/app/custom_apps:/var/www/html/custom_apps
      - $PWD/data/nextcloud/data:/var/www/html/data
      - $PWD/data/nextcloud/app/themes:/var/www/html/themes
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=infra_proxy"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.jnsgr.uk`)"
      - "traefik.http.routers.nextcloud.middlewares=nc-rep,nc-header"
      - "traefik.http.routers.nextcloud.tls.certresolver=myhttpchallenge"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.middlewares.nc-rep.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nc-rep.redirectregex.replacement=https://$$1/remote.php/dav/"
      - "traefik.http.middlewares.nc-rep.redirectregex.permanent=true"
      - "traefik.http.middlewares.nc-header.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.nc-header.headers.stsSeconds=15552000"
    restart: unless-stopped
    # Used when bootstrapping the infrastructure. Do not leave uncommented in production
    # env_file:
    #   - $PWD/env/nextcloud.env

  nextcloud-redis:
    image: redis
    container_name: nextcloud-redis
    command: ["redis-server", "--requirepass", "$REDIS_HOST_PASSWORD", "--appendonly", "yes"]
    restart: always
    networks:
      - nextcloud

  nextcloud-db:
    image: mariadb
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --log-bin=mysqld-bin --binlog-format=ROW --innodb=on
    networks:
      - nextcloud
    volumes:
      - $PWD/data/nextcloud/db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    # Used when bootstrapping the infrastructure. Do not leave uncommented in production
    # env_file:
    #   - $PWD/env/mariadb.env

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_DEBUG=true
      - WATCHTOWER_SCHEDULE=0 0 2 * * *
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  # onlyoffice:
  #   image: onlyoffice/documentserver:latest
  #   container_name: onlyoffice
  #   networks:
  #     - proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.onlyoffice.rule=Host(`office.jnsgr.uk`)"
  #     - "traefik.http.routers.onlyoffice.entrypoints=websecure"
  #     - "traefik.http.routers.onlyoffice.tls.certresolver=myhttpchallenge"
  #     - "traefik.http.routers.onlyoffice.tls=true"
  #     - "traefik.http.routers.onlyoffice.middlewares=onlyoffice-headers@docker"
  #     - "traefik.http.middlewares.onlyoffice-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
  #   restart: always
